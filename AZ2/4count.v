// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// PROGRAM		"Quartus II 64-Bit"
// VERSION		"Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"
// CREATED		"Wed Mar 10 13:12:02 2021"

module \4count (
	SETN,
	CLK,
	CLRN,
	DNUP,
	CIN,
	LDN,
	D,
	C,
	B,
	A,
	QA,
	QB,
	QC,
	QD,
	COUT
);


input wire	SETN;
input wire	CLK;
input wire	CLRN;
input wire	DNUP;
input wire	CIN;
input wire	LDN;
input wire	D;
input wire	C;
input wire	B;
input wire	A;
output wire	QA;
output wire	QB;
output wire	QC;
output wire	QD;
output wire	COUT;

reg	SYNTHESIZED_WIRE_66;
reg	SYNTHESIZED_WIRE_67;
wire	SYNTHESIZED_WIRE_68;
wire	SYNTHESIZED_WIRE_1;
reg	SYNTHESIZED_WIRE_69;
reg	SYNTHESIZED_WIRE_70;
wire	SYNTHESIZED_WIRE_71;
wire	SYNTHESIZED_WIRE_72;
wire	SYNTHESIZED_WIRE_73;
wire	SYNTHESIZED_WIRE_74;
wire	SYNTHESIZED_WIRE_10;
wire	SYNTHESIZED_WIRE_11;
wire	SYNTHESIZED_WIRE_12;
wire	SYNTHESIZED_WIRE_75;
wire	SYNTHESIZED_WIRE_16;
wire	SYNTHESIZED_WIRE_17;
wire	SYNTHESIZED_WIRE_18;
wire	SYNTHESIZED_WIRE_76;
wire	SYNTHESIZED_WIRE_21;
wire	SYNTHESIZED_WIRE_77;
wire	SYNTHESIZED_WIRE_78;
wire	SYNTHESIZED_WIRE_25;
wire	SYNTHESIZED_WIRE_79;
wire	SYNTHESIZED_WIRE_27;
wire	SYNTHESIZED_WIRE_28;
wire	SYNTHESIZED_WIRE_29;
wire	SYNTHESIZED_WIRE_30;
wire	SYNTHESIZED_WIRE_31;
wire	SYNTHESIZED_WIRE_32;
wire	SYNTHESIZED_WIRE_33;
wire	SYNTHESIZED_WIRE_34;
wire	SYNTHESIZED_WIRE_35;
wire	SYNTHESIZED_WIRE_36;
wire	SYNTHESIZED_WIRE_37;
wire	SYNTHESIZED_WIRE_38;
wire	SYNTHESIZED_WIRE_39;
wire	SYNTHESIZED_WIRE_40;
wire	SYNTHESIZED_WIRE_42;
wire	SYNTHESIZED_WIRE_43;
wire	SYNTHESIZED_WIRE_45;
wire	SYNTHESIZED_WIRE_46;
wire	SYNTHESIZED_WIRE_48;
wire	SYNTHESIZED_WIRE_49;
wire	SYNTHESIZED_WIRE_80;
wire	SYNTHESIZED_WIRE_52;
wire	SYNTHESIZED_WIRE_53;
wire	SYNTHESIZED_WIRE_54;
wire	SYNTHESIZED_WIRE_55;
wire	SYNTHESIZED_WIRE_58;
wire	SYNTHESIZED_WIRE_63;

assign	QA = SYNTHESIZED_WIRE_70;
assign	QB = SYNTHESIZED_WIRE_69;
assign	QC = SYNTHESIZED_WIRE_66;
assign	QD = SYNTHESIZED_WIRE_67;



assign	SYNTHESIZED_WIRE_28 = ~(SYNTHESIZED_WIRE_66 | SYNTHESIZED_WIRE_67 | SYNTHESIZED_WIRE_68 | SYNTHESIZED_WIRE_1 | SYNTHESIZED_WIRE_69 | SYNTHESIZED_WIRE_70);

assign	SYNTHESIZED_WIRE_74 = ~(CLRN & B & SYNTHESIZED_WIRE_71);

assign	SYNTHESIZED_WIRE_80 = ~(CLRN & A & SYNTHESIZED_WIRE_71);

assign	SYNTHESIZED_WIRE_10 = ~(SYNTHESIZED_WIRE_72 & SYNTHESIZED_WIRE_71);

assign	SYNTHESIZED_WIRE_11 = ~(SYNTHESIZED_WIRE_73 & SYNTHESIZED_WIRE_71);

assign	SYNTHESIZED_WIRE_12 = ~(SYNTHESIZED_WIRE_74 & SYNTHESIZED_WIRE_71);

assign	SYNTHESIZED_WIRE_39 = CLRN & SYNTHESIZED_WIRE_10;

assign	SYNTHESIZED_WIRE_42 = SYNTHESIZED_WIRE_11 & CLRN;

assign	SYNTHESIZED_WIRE_45 = CLRN & SYNTHESIZED_WIRE_12;

assign	SYNTHESIZED_WIRE_1 =  ~CIN;

assign	SYNTHESIZED_WIRE_75 =  ~LDN;

assign	SYNTHESIZED_WIRE_25 =  ~SYNTHESIZED_WIRE_66;

assign	SYNTHESIZED_WIRE_21 =  ~SYNTHESIZED_WIRE_69;

assign	SYNTHESIZED_WIRE_18 =  ~SYNTHESIZED_WIRE_70;

assign	SYNTHESIZED_WIRE_37 = SYNTHESIZED_WIRE_70 & LDN;

assign	SYNTHESIZED_WIRE_27 = SYNTHESIZED_WIRE_69 & SYNTHESIZED_WIRE_66 & SYNTHESIZED_WIRE_67 & SYNTHESIZED_WIRE_70 & SYNTHESIZED_WIRE_68 & CIN;

assign	SYNTHESIZED_WIRE_29 = A & SYNTHESIZED_WIRE_75;

assign	SYNTHESIZED_WIRE_30 = LDN & CIN;

assign	SYNTHESIZED_WIRE_35 = SYNTHESIZED_WIRE_69 & LDN;

assign	SYNTHESIZED_WIRE_58 = B & SYNTHESIZED_WIRE_75;

assign	SYNTHESIZED_WIRE_76 = SYNTHESIZED_WIRE_16 & SYNTHESIZED_WIRE_70;

assign	SYNTHESIZED_WIRE_77 = SYNTHESIZED_WIRE_17 & SYNTHESIZED_WIRE_18;

assign	SYNTHESIZED_WIRE_33 = SYNTHESIZED_WIRE_66 & LDN;

assign	SYNTHESIZED_WIRE_55 = C & SYNTHESIZED_WIRE_75;

assign	SYNTHESIZED_WIRE_78 = SYNTHESIZED_WIRE_69 & SYNTHESIZED_WIRE_76;

assign	SYNTHESIZED_WIRE_79 = SYNTHESIZED_WIRE_21 & SYNTHESIZED_WIRE_77;

assign	SYNTHESIZED_WIRE_31 = SYNTHESIZED_WIRE_67 & LDN;

assign	SYNTHESIZED_WIRE_52 = D & SYNTHESIZED_WIRE_75;

assign	SYNTHESIZED_WIRE_54 = SYNTHESIZED_WIRE_66 & SYNTHESIZED_WIRE_78;

assign	SYNTHESIZED_WIRE_53 = SYNTHESIZED_WIRE_25 & SYNTHESIZED_WIRE_79;

assign	COUT = SYNTHESIZED_WIRE_27 | SYNTHESIZED_WIRE_28;

assign	SYNTHESIZED_WIRE_38 = SYNTHESIZED_WIRE_29 | SYNTHESIZED_WIRE_30;

assign	SYNTHESIZED_WIRE_40 = SYNTHESIZED_WIRE_31 ^ SYNTHESIZED_WIRE_32;

assign	SYNTHESIZED_WIRE_43 = SYNTHESIZED_WIRE_33 ^ SYNTHESIZED_WIRE_34;

assign	SYNTHESIZED_WIRE_46 = SYNTHESIZED_WIRE_35 ^ SYNTHESIZED_WIRE_36;

assign	SYNTHESIZED_WIRE_49 = SYNTHESIZED_WIRE_37 ^ SYNTHESIZED_WIRE_38;


always@(posedge CLK or negedge SYNTHESIZED_WIRE_39 or negedge SYNTHESIZED_WIRE_72)
begin
if (!SYNTHESIZED_WIRE_39)
	begin
	SYNTHESIZED_WIRE_67 <= 0;
	end
else
if (!SYNTHESIZED_WIRE_72)
	begin
	SYNTHESIZED_WIRE_67 <= 1;
	end
else
	begin
	SYNTHESIZED_WIRE_67 <= SYNTHESIZED_WIRE_40;
	end
end


always@(posedge CLK or negedge SYNTHESIZED_WIRE_42 or negedge SYNTHESIZED_WIRE_73)
begin
if (!SYNTHESIZED_WIRE_42)
	begin
	SYNTHESIZED_WIRE_66 <= 0;
	end
else
if (!SYNTHESIZED_WIRE_73)
	begin
	SYNTHESIZED_WIRE_66 <= 1;
	end
else
	begin
	SYNTHESIZED_WIRE_66 <= SYNTHESIZED_WIRE_43;
	end
end


always@(posedge CLK or negedge SYNTHESIZED_WIRE_45 or negedge SYNTHESIZED_WIRE_74)
begin
if (!SYNTHESIZED_WIRE_45)
	begin
	SYNTHESIZED_WIRE_69 <= 0;
	end
else
if (!SYNTHESIZED_WIRE_74)
	begin
	SYNTHESIZED_WIRE_69 <= 1;
	end
else
	begin
	SYNTHESIZED_WIRE_69 <= SYNTHESIZED_WIRE_46;
	end
end


always@(posedge CLK or negedge SYNTHESIZED_WIRE_48 or negedge SYNTHESIZED_WIRE_80)
begin
if (!SYNTHESIZED_WIRE_48)
	begin
	SYNTHESIZED_WIRE_70 <= 0;
	end
else
if (!SYNTHESIZED_WIRE_80)
	begin
	SYNTHESIZED_WIRE_70 <= 1;
	end
else
	begin
	SYNTHESIZED_WIRE_70 <= SYNTHESIZED_WIRE_49;
	end
end

assign	SYNTHESIZED_WIRE_17 = DNUP & CIN & LDN;

assign	SYNTHESIZED_WIRE_16 = SYNTHESIZED_WIRE_68 & CIN & LDN;

assign	SYNTHESIZED_WIRE_32 = SYNTHESIZED_WIRE_52 | SYNTHESIZED_WIRE_53 | SYNTHESIZED_WIRE_54;

assign	SYNTHESIZED_WIRE_34 = SYNTHESIZED_WIRE_55 | SYNTHESIZED_WIRE_79 | SYNTHESIZED_WIRE_78;

assign	SYNTHESIZED_WIRE_36 = SYNTHESIZED_WIRE_58 | SYNTHESIZED_WIRE_77 | SYNTHESIZED_WIRE_76;

assign	SYNTHESIZED_WIRE_68 =  ~DNUP;

assign	SYNTHESIZED_WIRE_71 =  ~SETN;

assign	SYNTHESIZED_WIRE_63 = ~(SYNTHESIZED_WIRE_80 & SYNTHESIZED_WIRE_71);

assign	SYNTHESIZED_WIRE_48 = CLRN & SYNTHESIZED_WIRE_63;

assign	SYNTHESIZED_WIRE_72 = ~(CLRN & SYNTHESIZED_WIRE_71 & D);

assign	SYNTHESIZED_WIRE_73 = ~(CLRN & C & SYNTHESIZED_WIRE_71);


endmodule
