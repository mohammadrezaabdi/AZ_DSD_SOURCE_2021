$date
	Wed Apr 14 22:55:38 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$scope module mb $end
$var wire 1 ! clk $end
$var wire 4 " in1 [3:0] $end
$var wire 4 # in2 [3:0] $end
$var wire 1 $ rstn $end
$var wire 1 % start $end
$var wire 2 & status [1:0] $end
$var wire 1 ' out_r $end
$var wire 8 ( out [7:0] $end
$var wire 10 ) control [9:0] $end
$scope module cu $end
$var wire 1 * ADD_X $end
$var wire 1 + LD_A $end
$var wire 1 , LD_B $end
$var wire 1 - LD_CONT $end
$var wire 1 . RST_EF $end
$var wire 1 / RST_X $end
$var wire 1 0 SET_EF $end
$var wire 1 1 SHIFT_XB $end
$var wire 1 2 SUB_CONT $end
$var wire 1 3 SUB_X $end
$var wire 1 ! clk $end
$var wire 1 $ rstn $end
$var wire 1 % start $end
$var wire 2 4 status [1:0] $end
$var wire 10 5 control [9:0] $end
$var wire 1 6 SUB $end
$var wire 1 7 SHIFT2 $end
$var wire 1 8 SHIFT1 $end
$var wire 1 9 INIT $end
$var wire 1 : FIN $end
$var wire 1 ; B0 $end
$var wire 1 < ADD $end
$var reg 1 = ADD_D $end
$var reg 1 > INIT_D $end
$var reg 1 ? SHIFT1_D $end
$var reg 1 @ SHIFT2_D $end
$var reg 1 A SUB_D $end
$scope module add $end
$var wire 1 ! clk $end
$var wire 1 = d $end
$var reg 1 < q $end
$upscope $end
$scope module init $end
$var wire 1 ! clk $end
$var wire 1 > d $end
$var reg 1 9 q $end
$upscope $end
$scope module shift1 $end
$var wire 1 ! clk $end
$var wire 1 ? d $end
$var reg 1 8 q $end
$upscope $end
$scope module shift2 $end
$var wire 1 ! clk $end
$var wire 1 @ d $end
$var reg 1 7 q $end
$upscope $end
$scope module sub $end
$var wire 1 ! clk $end
$var wire 1 A d $end
$var reg 1 6 q $end
$upscope $end
$upscope $end
$scope module dp $end
$var wire 4 B IN1 [3:0] $end
$var wire 4 C IN2 [3:0] $end
$var wire 1 ! clk $end
$var wire 10 D control [9:0] $end
$var wire 2 E status [1:0] $end
$var wire 1 F SUB_X $end
$var wire 1 G SUB_CONT $end
$var wire 1 H SHIFT_XB $end
$var wire 1 I SET_EF $end
$var wire 1 J RST_X $end
$var wire 1 K RST_EF $end
$var wire 8 L OUT [7:0] $end
$var wire 1 M LD_CONT $end
$var wire 1 N LD_B $end
$var wire 1 O LD_A $end
$var wire 1 P ADD_X $end
$var reg 4 Q A [3:0] $end
$var reg 4 R B [3:0] $end
$var reg 1 ' EF $end
$var reg 4 S X [3:0] $end
$var integer 32 T cont [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx T
bx S
bx R
bx Q
xP
xO
xN
xM
bx L
xK
xJ
xI
xH
xG
xF
bx E
bx D
bx C
bx B
0A
0@
0?
1>
0=
x<
x;
x:
x9
x8
x7
x6
bx 5
bx 4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
bx )
bx (
x'
bx &
1%
0$
bx #
bx "
0!
$end
#2
0:
b0xxx R
0'
b0xxx (
b0xxx L
b0 S
bx0 &
bx0 4
bx0 E
b110 T
0I
1K
1J
1M
1N
1O
0G
0H
00
1.
1/
1-
1,
1+
0F
0P
02
01
19
03
06
b1110110000 )
b1110110000 5
b1110110000 D
0*
0<
08
07
1!
#4
0!
#5
1;
b10 &
b10 4
b10 E
0O
0N
0M
0J
0K
b1011 (
b1011 L
b1011 R
b111 Q
0+
0,
0-
0/
b0 )
b0 5
b0 D
0.
b1011 #
b1011 C
b111 "
b111 B
0%
1$
#6
1!
#8
0!
#10
0;
b0 &
b0 4
b0 E
b10 S
1?
1F
09
13
16
0O
0N
0M
0J
0K
b101110 (
b101110 L
b1110 R
0A
0>
0+
0,
0-
0/
b1000 )
b1000 5
b1000 D
0.
1!
1%
#12
0!
#14
1;
b101 T
b10 &
b10 4
b10 E
1G
1H
b1111 R
12
11
1?
0=
0F
b11101111 (
b11101111 L
b1110 S
18
b101 )
b101 5
b101 D
03
06
1!
#16
0!
#18
1!
#20
0!
#22
1!
#24
0!
#26
1!
#28
0!
#30
1!
#32
0!
#34
1!
#36
0!
#38
1!
#40
0!
#42
1!
#44
0!
#46
1!
#48
0!
#50
1!
#52
0!
#54
1!
#56
0!
#58
1!
#60
0!
#62
1!
#64
0!
#66
1!
#68
0!
#70
1!
#72
0!
#74
1!
#76
0!
#78
1!
#80
0!
#82
1!
#84
0!
#86
1!
#88
0!
#90
1!
#92
0!
#94
1!
#96
0!
#98
1!
#100
0!
#102
1!
#104
0!
#106
1!
#108
0!
#110
1!
