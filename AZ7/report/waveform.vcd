$date
	Mon May  3 03:15:53 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$scope module uart0 $end
$var wire 1 ! clk $end
$var wire 1 " rstn $end
$var wire 7 # tx_data_in [6:0] $end
$var wire 1 $ tx_start $end
$var wire 1 % tx_channel_out $end
$var wire 1 & rx_out_vaild $end
$var wire 7 ' rx_data_out [6:0] $end
$var wire 1 ( rx_channel_in $end
$scope module rx $end
$var wire 1 ! clk $end
$var wire 1 " rstn $end
$var wire 1 ( channel_in $end
$var reg 7 ) buffer [6:0] $end
$var reg 7 * data_out [6:0] $end
$var reg 5 + fetch_idx [4:0] $end
$var reg 1 & is_valid $end
$var reg 1 , parity $end
$var reg 1 - state $end
$upscope $end
$scope module tx $end
$var wire 1 ! clk $end
$var wire 7 . data_in [6:0] $end
$var wire 1 " rstn $end
$var wire 1 $ start $end
$var reg 7 / buffer [6:0] $end
$var reg 1 % channel_out $end
$var reg 5 0 send_idx [4:0] $end
$var reg 1 1 state $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module uart1 $end
$var wire 1 ! clk $end
$var wire 1 2 rstn $end
$var wire 1 % rx_channel_in $end
$var wire 7 3 tx_data_in [6:0] $end
$var wire 1 4 tx_start $end
$var wire 1 ( tx_channel_out $end
$var wire 1 5 rx_out_vaild $end
$var wire 7 6 rx_data_out [6:0] $end
$scope module rx $end
$var wire 1 % channel_in $end
$var wire 1 ! clk $end
$var wire 1 2 rstn $end
$var reg 7 7 buffer [6:0] $end
$var reg 7 8 data_out [6:0] $end
$var reg 5 9 fetch_idx [4:0] $end
$var reg 1 5 is_valid $end
$var reg 1 : parity $end
$var reg 1 ; state $end
$upscope $end
$scope module tx $end
$var wire 1 ! clk $end
$var wire 7 < data_in [6:0] $end
$var wire 1 2 rstn $end
$var wire 1 4 start $end
$var reg 7 = buffer [6:0] $end
$var reg 1 ( channel_out $end
$var reg 5 > send_idx [4:0] $end
$var reg 1 ? state $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0?
b0 >
b0 =
bx <
0;
0:
b0 9
bz 8
b0 7
bz 6
05
x4
bx 3
02
01
b0 0
b0 /
bx .
0-
0,
b0 +
bz *
b0 )
0(
bz '
0&
0%
x$
bx #
0"
0!
$end
#5
1!
#10
0!
b1011011 #
b1011011 .
1$
12
1"
#15
1%
b1011011 /
11
1!
#20
0!
0$
#25
b1 0
1;
1!
#30
0!
#35
b1 7
b10 0
b1 9
1!
#40
0!
#45
0%
b11 7
b11 0
b10 9
1!
#50
0!
#55
1%
b100 0
b11 9
1!
#60
0!
#65
b1011 7
b101 0
b100 9
1!
#70
0!
#75
0%
b11011 7
b110 0
b101 9
1!
#80
0!
#85
1%
b111 0
b110 9
1!
#90
0!
#95
b1011011 7
b1000 0
b111 9
1!
#100
0!
#105
1:
b1001 0
b1000 9
1!
#110
0!
#115
15
b1011011 6
b1011011 8
b1010 0
b1001 9
1!
#120
0!
#125
0%
b0 0
b0 /
bz 6
bz 8
b0 9
b0 7
0:
05
01
0;
1!
#130
0!
b10000 #
b10000 .
1$
#135
1%
b10000 /
11
1!
#140
0!
0$
#145
0%
b1 0
1;
1!
#150
0!
#155
b10 0
b1 9
1!
#160
0!
#165
b11 0
b10 9
1!
#170
0!
#175
b100 0
b11 9
1!
#180
0!
#185
1%
b101 0
b100 9
1!
#190
0!
#195
0%
b10000 7
b110 0
b101 9
1!
#200
0!
#205
b111 0
b110 9
1!
#210
0!
#215
1%
b1000 0
b111 9
1!
#220
0!
#225
1:
b1001 0
b1000 9
1!
#230
0!
#235
15
b10000 6
b10000 8
b1010 0
b1001 9
1!
#240
0!
#245
0%
b0 0
b0 /
bz 6
bz 8
b0 9
b0 7
0:
05
01
0;
1!
#250
0!
b100110 #
b100110 .
1$
#255
1%
b100110 /
11
1!
#260
0!
0$
#265
0%
b1 0
1;
1!
#270
0!
#275
1%
b10 0
b1 9
1!
#280
0!
#285
b10 7
b11 0
b10 9
1!
#290
0!
#295
0%
b110 7
b100 0
b11 9
1!
#300
0!
#305
b101 0
b100 9
1!
#310
0!
#315
1%
b110 0
b101 9
1!
#320
0!
#325
0%
b100110 7
b111 0
b110 9
1!
#330
0!
#335
1%
b1000 0
b111 9
1!
#340
0!
#345
1:
b1001 0
b1000 9
1!
#350
0!
#355
15
b100110 6
b100110 8
b1010 0
b1001 9
1!
#360
0!
#365
0%
b0 0
b0 /
bz 6
bz 8
b0 9
b0 7
0:
05
01
0;
1!
#370
0!
